/**
 * Created by IFatkullina on 25.09.2018.
 * Пример: Шифрование и сжатие данных
 Пример показывает, как можно добавить новую
 функциональность объекту, не меняя его класса.

 Сначала класс бизнес-логики мог считывать и записывать
 только чистые данные напрямую из/в файлы. Применив паттерн
 Декоратор, мы создали небольшие классы-обёртки, которые
 добавляют новые поведения до или после основной работы
 вложенного объекта бизнес-логики.

 Первая обёртка шифрует и расшифрует данные,
 а вторая — сжимает и распакует их.

 Мы можем использовать обёртки как отдельно друг от
 друга, так и все вместе, обернув один декоратор другим.
 */
package designPatterns.structural.decorator.example_1;